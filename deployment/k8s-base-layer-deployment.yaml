###################################
# sta-service
###################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sta-service
  labels:
    app: sta-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sta-service
  template:
    metadata:
      labels:
        app: sta-service
    spec:
      containers:
        - name: sta-service
          image: us-central1-docker.pkg.dev/nomoniliticasmiso2025/no-monoliticas/sta-service:1.0.3
          resources:
            requests:
              memory: "64Mi"
              cpu: "150m"
            limits:
              memory: "128Mi"
              cpu: "310m"
          ports:
            - containerPort: 5000
          env:
            - name: "BROKER_HOST"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: BROKER_HOST
            - name: "DB_HOSTNAME"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_HOSTNAME
            - name: "DB_USERNAME"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_USERNAME
            - name: "DB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_PASSWORD
            - name: "DB_NAME_STA"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_NAME_STA
          imagePullPolicy: Always
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: sta-service-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 5000
    type: HTTP
    requestPath: /ingesta/health
---
kind: Service
apiVersion: v1
metadata:
  name: sta-service-service
  annotations:
    cloud.google.com/backend-config: '{"default": "sta-service-config"}'
spec:
  type: NodePort
  selector:
    app: sta-service
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
      nodePort: 31019
---


###################################
# bff-service
###################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bff-service
  labels:
    app: bff-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bff-service
  template:
    metadata:
      labels:
        app: bff-service
    spec:
      containers:
        - name: bff-service
          image: us-central1-docker.pkg.dev/nomoniliticasmiso2025/no-monoliticas/bff-service:1.0.3
          resources:
            requests:
              memory: "64Mi"
              cpu: "150m"
            limits:
              memory: "128Mi"
              cpu: "305m"
          ports:
            - containerPort: 8003
          env:
            - name: "BROKER_HOST"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: BROKER_HOST
            - name: "SALUDTECH_ALPES_ADDRESS"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: SALUDTECH_ALPES_ADDRESS
          imagePullPolicy: Always
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: bff-service-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 8003
    type: HTTP
    requestPath: /bff/version
---
kind: Service
apiVersion: v1
metadata:
  name: bff-service-service
  annotations:
    cloud.google.com/backend-config: '{"default": "bff-service-config"}'
spec:
  type: NodePort
  selector:
    app: bff-service
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8003
      nodePort: 31020
---


###################################
# anonimizador-service
###################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: anonimizador-service
  labels:
    app: anonimizador-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: anonimizador-service
  template:
    metadata:
      labels:
        app: anonimizador-service
    spec:
      containers:
        - name: anonimizador-service
          image: us-central1-docker.pkg.dev/nomoniliticasmiso2025/no-monoliticas/anonimizador-service:1.0.3
          resources:
            requests:
              memory: "64Mi"
              cpu: "150m"
            limits:
              memory: "128Mi"
              cpu: "300m"
          ports:
            - containerPort: 5001
          env:
            - name: "BROKER_HOST"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: BROKER_HOST
            - name: "DB_HOSTNAME"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_HOSTNAME
            - name: "DB_USERNAME"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_USERNAME
            - name: "DB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_PASSWORD
            - name: "DB_NAME_ANONIMIZADOR"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_NAME_ANONIMIZADOR
          imagePullPolicy: Always
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: anonimizador-service-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 5001
    type: HTTP
    requestPath: /anonimizador/health
---
kind: Service
apiVersion: v1
metadata:
  name: anonimizador-service-service
  annotations:
    cloud.google.com/backend-config: '{"default": "anonimizador-service-config"}'
spec:
  type: NodePort
  selector:
    app: anonimizador-service
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5001
      nodePort: 31021
---


###################################
# etiquetado-service
###################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: etiquetado-service
  labels:
    app: etiquetado-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: etiquetado-service
  template:
    metadata:
      labels:
        app: etiquetado-service
    spec:
      containers:
        - name: etiquetado-service
          image: us-central1-docker.pkg.dev/nomoniliticasmiso2025/no-monoliticas/etiquetado-service:1.0.3
          resources:
            requests:
              memory: "64Mi"
              cpu: "150m"
            limits:
              memory: "128Mi"
              cpu: "300m"
          ports:
            - containerPort: 5002
          env:
            - name: "BROKER_HOST"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: BROKER_HOST
            - name: "DB_HOSTNAME"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_HOSTNAME
            - name: "DB_USERNAME"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_USERNAME
            - name: "DB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_PASSWORD
            - name: "DB_NAME_ETIQUETADOR"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_NAME_ETIQUETADOR
          imagePullPolicy: Always
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: etiquetado-service-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 5002
    type: HTTP
    requestPath: /etiquetado/health
---
kind: Service
apiVersion: v1
metadata:
  name: etiquetado-service-service
  annotations:
    cloud.google.com/backend-config: '{"default": "etiquetado-service-config"}'
spec:
  type: NodePort
  selector:
    app: etiquetado-service
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5002
      nodePort: 31022
---